logging:
  level:
    ROOT: INFO
    org.springframework.cache: TRACE
    com.endo4life: DEBUG
    org.hibernate.SQL: ERROR
    org.hibernate.orm.jdbc.bind: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: DEBUG
    org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: ERROR
    org.springframework.boot.devtools: ERROR
    org.springframework.web.socket: DEBUG
    org.springframework.messaging: DEBUG
  com:
    fasterxml:
      jackson: DEBUG

server:
  port: 8080

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include:
          [
            "configprops",
            "env",
            "health",
            "info",
            "logfile",
            "loggers",
            "prometheus",
            "threaddump",
            "caches",
          ]

application:
  app-version: @project.version@

spring:
  task:
    execution:
      thread-name-prefix: endo4life-task-
      pool:
        core-size: 10
        max-size: 50
        queue-capacity: 1000
    scheduling:
      thread-name-prefix: endo4life-scheduling-
      pool:
        size: 2
  application:
    name: endo4life-service
    keycloak-configuration:
      base-url: https://keycloak.endo4life.shop
      internal-url: https://keycloak.endo4life.shop
      realm: endo4life
      client-id: endo4life-be
      secret: ${KEYCLOAK_CLIENT_SECRET:your-client-secret}
      jwk-set-uri: https://keycloak.endo4life.shop/realms/endo4life/protocol/openid-connect/certs
      issuer-uri: https://keycloak.endo4life.shop/realms/endo4life
      webhook:
        enabled: true
        client-id: admin-cli
        realm: master
        secret: ${KEYCLOAK_WEBHOOK_SECRET:webhook-secret}
        path: https://api.endo4life.shop/api/v1/webhooks/keycloak
      invite-lifespan: 432000
    minio-configuration:
      endpoint: https://minio-api.endo4life.shop
      username: ${MINIO_USERNAME:admin}
      password: ${MINIO_PASSWORD:minio123456}
      webhook-identifier: _
      bucket-video: videos
      bucket-image: images
      bucket-avatar: avatars
      bucket-thumbnail: thumbnails
      bucket-other: others
      bucket-process: process
    job:
      delete-user:
        enabled: true
        cron: 0 0 * * * *
  datasource:
    url: jdbc:postgresql://postgresql:5432/elearning
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres123}
    driverClassName: org.postgresql.Driver
  flyway:
    baselineOnMigrate: true
    enabled: true
    locations: classpath:db/migration
  config:
    import: optional:file:.env[.properties]
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: true
    open-in-view: false
  servlet:
    multipart:
      max-file-size: 5120MB
      max-request-size: 51200MB
      resolve-lazily: true